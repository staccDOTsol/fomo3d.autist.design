{"version":3,"file":"updateAuctionHouse.cjs","sources":["../../../../src/plugins/auctionHouseModule/updateAuctionHouse.ts"],"sourcesContent":["import { ConfirmOptions, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, Signer, OperationHandler } from '@/types';\nimport { TransactionBuilder } from '@/utils';\nimport {\n  findAssociatedTokenAccountPda,\n  createUpdateAuctionHouseInstructionWithSigners,\n} from '@/programs';\nimport { SendAndConfirmTransactionResponse } from '../rpcModule';\nimport { AuctionHouse } from './AuctionHouse';\nimport { TreasureDestinationOwnerRequiredError } from './errors';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'UpdateAuctionHouseOperation' as const;\nexport const updateAuctionHouseOperation =\n  useOperation<UpdateAuctionHouseOperation>(Key);\nexport type UpdateAuctionHouseOperation = Operation<\n  typeof Key,\n  UpdateAuctionHouseInput,\n  UpdateAuctionHouseOutput\n>;\n\nexport type UpdateAuctionHouseInput = {\n  // Main Accounts.\n  auctionHouse: AuctionHouse;\n  authority?: Signer;\n  payer?: Signer;\n\n  // Updatable Data.\n  sellerFeeBasisPoints?: number | null;\n  requiresSignOff?: boolean | null;\n  canChangeSalePrice?: boolean | null;\n  newAuthority?: PublicKey;\n  treasuryMint?: PublicKey;\n  feeWithdrawalDestination?: PublicKey;\n  treasuryWithdrawalDestinationOwner?: PublicKey;\n\n  // Options.\n  confirmOptions?: ConfirmOptions;\n};\n\nexport type UpdateAuctionHouseOutput = {\n  response: SendAndConfirmTransactionResponse;\n};\n\n// -----------------\n// Handler\n// -----------------\n\nexport const updateAuctionHouseOperationHandler: OperationHandler<UpdateAuctionHouseOperation> =\n  {\n    handle: async (\n      operation: UpdateAuctionHouseOperation,\n      metaplex: Metaplex\n    ) => {\n      const response = await metaplex\n        .rpc()\n        .sendAndConfirmTransaction(\n          updateAuctionHouseBuilder(metaplex, operation.input),\n          undefined,\n          operation.input.confirmOptions\n        );\n\n      return {\n        response,\n      };\n    },\n  };\n\n// -----------------\n// Builder\n// -----------------\n\nexport type UpdateAuctionHouseBuilderParams = Omit<\n  UpdateAuctionHouseInput,\n  'confirmOptions'\n> & {\n  instructionKey?: string;\n};\n\nexport const updateAuctionHouseBuilder = (\n  metaplex: Metaplex,\n  params: UpdateAuctionHouseBuilderParams\n): TransactionBuilder => {\n  const authority = params.authority ?? metaplex.identity();\n  const payer = params.payer ?? metaplex.identity();\n  const auctionHouse = params.auctionHouse;\n  const newAuthority = params.newAuthority ?? auctionHouse.authority;\n  const treasuryMint = params.treasuryMint ?? auctionHouse.treasuryMint;\n  const feeWithdrawalDestination =\n    params.feeWithdrawalDestination ?? auctionHouse.feeWithdrawalDestination;\n\n  let treasuryWithdrawalDestinationOwner: PublicKey;\n  let treasuryWithdrawalDestination: PublicKey;\n  if (auctionHouse.usesSol()) {\n    treasuryWithdrawalDestinationOwner =\n      params.treasuryWithdrawalDestinationOwner ??\n      auctionHouse.treasuryWithdrawalDestination;\n    treasuryWithdrawalDestination = treasuryWithdrawalDestinationOwner;\n  } else if (params.treasuryWithdrawalDestinationOwner) {\n    treasuryWithdrawalDestinationOwner =\n      params.treasuryWithdrawalDestinationOwner;\n    treasuryWithdrawalDestination = findAssociatedTokenAccountPda(\n      treasuryMint,\n      treasuryWithdrawalDestinationOwner\n    );\n  } else {\n    throw new TreasureDestinationOwnerRequiredError();\n  }\n\n  return TransactionBuilder.make()\n    .setFeePayer(payer)\n    .add(\n      createUpdateAuctionHouseInstructionWithSigners({\n        treasuryMint,\n        payer,\n        authority,\n        newAuthority,\n        feeWithdrawalDestination,\n        treasuryWithdrawalDestination,\n        treasuryWithdrawalDestinationOwner,\n        auctionHouse: auctionHouse.address,\n        args: {\n          sellerFeeBasisPoints: params.sellerFeeBasisPoints ?? null,\n          requiresSignOff: params.requiresSignOff ?? null,\n          canChangeSalePrice: params.canChangeSalePrice ?? null,\n        },\n        instructionKey: params.instructionKey,\n      })\n    );\n};\n"],"names":["Key","updateAuctionHouseOperation","useOperation","updateAuctionHouseOperationHandler","handle","operation","metaplex","response","rpc","sendAndConfirmTransaction","updateAuctionHouseBuilder","input","undefined","confirmOptions","params","authority","identity","payer","auctionHouse","newAuthority","treasuryMint","feeWithdrawalDestination","treasuryWithdrawalDestinationOwner","treasuryWithdrawalDestination","usesSol","findAssociatedTokenAccountPda","TreasureDestinationOwnerRequiredError","TransactionBuilder","make","setFeePayer","add","createUpdateAuctionHouseInstructionWithSigners","address","args","sellerFeeBasisPoints","requiresSignOff","canChangeSalePrice","instructionKey"],"mappings":";;;;;;;;;;AAaA;AACA;;AAEA,MAAMA,GAAG,GAAG,6BAAZ,CAAA;MACaC,2BAA2B,GACtCC,sBAAY,CAA8BF,GAA9B,EADP;AA+BP;AACA;AACA;AAEO,MAAMG,kCAAiF,GAC5F;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,KAGH;IACH,MAAMC,QAAQ,GAAG,MAAMD,QAAQ,CAC5BE,GADoB,EAEpBC,CAAAA,yBAFoB,CAGnBC,yBAAyB,CAACJ,QAAD,EAAWD,SAAS,CAACM,KAArB,CAHN,EAInBC,SAJmB,EAKnBP,SAAS,CAACM,KAAV,CAAgBE,cALG,CAAvB,CAAA;IAQA,OAAO;AACLN,MAAAA,QAAAA;KADF,CAAA;AAGD,GAAA;AAhBH;AAoBF;AACA;;MASaG,yBAAyB,GAAG,CACvCJ,QADuC,EAEvCQ,MAFuC,KAGhB;AAAA,EAAA,IAAA,iBAAA,EAAA,aAAA,EAAA,oBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,qBAAA,CAAA;;EACvB,MAAMC,SAAS,wBAAGD,MAAM,CAACC,SAAV,MAAuBT,IAAAA,IAAAA,iBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,iBAAAA,GAAAA,QAAQ,CAACU,QAAT,EAAtC,CAAA;EACA,MAAMC,KAAK,oBAAGH,MAAM,CAACG,KAAV,MAAmBX,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,GAAAA,aAAAA,GAAAA,QAAQ,CAACU,QAAT,EAA9B,CAAA;AACA,EAAA,MAAME,YAAY,GAAGJ,MAAM,CAACI,YAA5B,CAAA;EACA,MAAMC,YAAY,2BAAGL,MAAM,CAACK,YAAV,MAA0BD,IAAAA,IAAAA,oBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAAA,GAAAA,YAAY,CAACH,SAAzD,CAAA;EACA,MAAMK,YAAY,2BAAGN,MAAM,CAACM,YAAV,MAA0BF,IAAAA,IAAAA,oBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,oBAAAA,GAAAA,YAAY,CAACE,YAAzD,CAAA;EACA,MAAMC,wBAAwB,4BAC5BP,MAAM,CAACO,wBADqB,MACOH,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,GAAAA,YAAY,CAACG,wBADlD,CAAA;AAGA,EAAA,IAAIC,kCAAJ,CAAA;AACA,EAAA,IAAIC,6BAAJ,CAAA;;AACA,EAAA,IAAIL,YAAY,CAACM,OAAb,EAAJ,EAA4B;AAAA,IAAA,IAAA,qBAAA,CAAA;;AAC1BF,IAAAA,kCAAkC,4BAChCR,MAAM,CAACQ,kCADyB,MAEhCJ,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,GAAAA,YAAY,CAACK,6BAFf,CAAA;AAGAA,IAAAA,6BAA6B,GAAGD,kCAAhC,CAAA;AACD,GALD,MAKO,IAAIR,MAAM,CAACQ,kCAAX,EAA+C;IACpDA,kCAAkC,GAChCR,MAAM,CAACQ,kCADT,CAAA;AAEAC,IAAAA,6BAA6B,GAAGE,2DAA6B,CAC3DL,YAD2D,EAE3DE,kCAF2D,CAA7D,CAAA;AAID,GAPM,MAOA;IACL,MAAM,IAAII,4CAAJ,EAAN,CAAA;AACD,GAAA;;EAED,OAAOC,qCAAkB,CAACC,IAAnB,EACJC,CAAAA,WADI,CACQZ,KADR,CAEJa,CAAAA,GAFI,CAGHC,6FAA8C,CAAC;IAC7CX,YAD6C;IAE7CH,KAF6C;IAG7CF,SAH6C;IAI7CI,YAJ6C;IAK7CE,wBAL6C;IAM7CE,6BAN6C;IAO7CD,kCAP6C;IAQ7CJ,YAAY,EAAEA,YAAY,CAACc,OARkB;AAS7CC,IAAAA,IAAI,EAAE;AACJC,MAAAA,oBAAoB,EAAEpB,CAAAA,qBAAAA,GAAAA,MAAM,CAACoB,oBAAT,yEAAiC,IADjD;AAEJC,MAAAA,eAAe,EAAErB,CAAAA,qBAAAA,GAAAA,MAAM,CAACqB,eAAT,yEAA4B,IAFvC;AAGJC,MAAAA,kBAAkB,EAAEtB,CAAAA,qBAAAA,GAAAA,MAAM,CAACsB,kBAAT,MAA+B,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAAA,IAAA;KAZN;IAc7CC,cAAc,EAAEvB,MAAM,CAACuB,cAAAA;AAdsB,GAAD,CAH3C,CAAP,CAAA;AAoBD;;;;;;"}