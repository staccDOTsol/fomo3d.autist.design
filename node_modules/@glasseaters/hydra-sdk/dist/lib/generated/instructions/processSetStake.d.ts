/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from "@metaplex-foundation/beet";
import * as web3 from "@solana/web3.js";
/**
 * @category Instructions
 * @category ProcessSetStake
 * @category generated
 */
export declare type ProcessSetStakeInstructionArgs = {
  shares: beet.bignum;
};
/**
 * Accounts required by the _processSetStake_ instruction
 * @category Instructions
 * @category ProcessSetStake
 * @category generated
 */
export declare type ProcessSetStakeInstructionAccounts = {
  member: web3.PublicKey;
  fanout: web3.PublicKey;
  membershipAccount: web3.PublicKey;
  membershipMint: web3.PublicKey;
  membershipMintTokenAccount: web3.PublicKey;
  memberStakeAccount: web3.PublicKey;
};
/**
 * Creates a _ProcessSetStake_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category ProcessSetStake
 * @category generated
 */
export declare function createProcessSetStakeInstruction(
  accounts: ProcessSetStakeInstructionAccounts,
  args: ProcessSetStakeInstructionArgs
): web3.TransactionInstruction;
//# sourceMappingURL=processSetStake.d.ts.map
